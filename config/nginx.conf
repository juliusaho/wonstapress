worker_processes  1;
pid /run/nginx.pid;
load_module modules/ngx_http_brotli_static_module.so;
load_module modules/ngx_http_brotli_filter_module.so;
user nginx nginx;

events {
    worker_connections 4096;
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    keepalive_timeout 65;

    server_tokens off;

    # Enable gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_proxied any;

    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    # Enable brotli compression
    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Forward the cloudfront scheme from upstream
    map "$http_cloudfront_forwarded_proto$http_x_forwarded_proto" $forwarded_scheme {
         default off;
         "~*(https)" on;
     }

    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;

        set $redirect_to_https 0;
        if ($http_x_forwarded_proto != 'https') {
            set $redirect_to_https 1;
        }

        if ($request_uri = '/nginx-health') {
            set $redirect_to_https 0;
        }

        if ($redirect_to_https = 1) {
            return 301 https://$host$request_uri;
        }
        
        sendfile off;

        # Increase proxy buffers for large requests
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Upload limit
        client_max_body_size 50m;
        client_body_buffer_size 128k;

        root /var/www;
        index index.php;

        # redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        # Based on https://codeable.io/wordpress-developers-intro-to-docker-part-two/
        location /wp-content {
            root /var/www;
            expires 7d;
            add_header Cache-Control "public";
        }

        # Don't cache appcache, document html and data.
        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
            expires 0;
        }

        # Cache RSS and Atom feeds.
        location ~* \.(?:rss|atom)$ {
            expires 1h;
        }

        # Caches images, icons, video, audio, HTC, etc.
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|mp4|ogg|ogv|webm|htc)$ {
            expires 1y;
            access_log off;
        }

        # Cache svgz files, but don't compress them.
        location ~* \.svgz$ {
            expires 1y;
            access_log off;
            gzip off;
        }

        # Cache CSS and JavaScript.
        location ~* \.(?:css|js)$ {
            expires 1y;
            access_log off;
        }

        # Cache WebFonts.
        location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
            expires 1y;
            access_log off;
            add_header Access-Control-Allow-Origin *;
        }
        
        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            try_files $uri $uri/ /index.php?$args;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            #fastcgi_intercept_errors on;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 16 256k;
            fastcgi_busy_buffers_size 256k;

            fastcgi_index index.php;
            fastcgi_pass 127.0.0.1:9000;

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;

            # Forward the scheme from upstream
            fastcgi_param HTTPS $forwarded_scheme;

            # Fastcgi cache rules
	        include global/server/fastcgi-cache.conf;
            # Cache
            include global/fastcgi-params.conf;

            fastcgi_cache_bypass $skip_cache;
		    fastcgi_no_cache $skip_cache;
            fastcgi_cache_valid 60m;

        }

        # deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        # health check
        location /nginx-health {
            access_log off;
            log_not_found off;
            return 200 "healthy\n";
        }
    }

}
